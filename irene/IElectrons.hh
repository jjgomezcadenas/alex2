
#ifndef ALGOIElectrons_
#define ALGOIElectrons_
// Generated by AlexConf: do not edit
#include <string>
#include <vector>
#include <utility>
#include <memory>
#include <map>
#include <TH1F.h>
#include <TH2F.h>
#include <alex/IAlgorithm.h>
namespace alex {
  class IElectrons: public IAlgorithm {
  public:
    IElectrons();
    ~IElectrons(){}
    bool Init() ;
    bool Execute() ;
    bool End() ;
    std::string  Name() const {return fName;}
    void SetName(std::string name) {fName = name;}
  private:
    std::string fName;
    double PMAX;
    TH1F* fH1_nb;
    TH1F* fH1_P;
    TH1F* fH1_PMax;
    TH1F* fH1_TMax;
    TH1F* fH1_PMax2;
    TH1F* fH1_TMax2;
    TH1F* fH1_TMax12;
    TH2F* fH2_YZ;
    TH2F* fH2_XZ;
    TH2F* fH2_XY;
  };
}
#endif 
