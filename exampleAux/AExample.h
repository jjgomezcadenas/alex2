
#ifndef ALGOHEAD_
#define ALGOHEAD_
// Generated by AlexConf: do not edit
#include <string>
#include <vector>
#include <utility>
#include <memory>
#include <map>
#include <TF1.h>
#include <TF2.h>
#include <alex/IAlgorithm.h>
namespace alex {
  class AEx1: public IAlgorithm {
  public:
    bool Init() ;
    bool Execute() ;
    bool End() ;
    std::string  Name() const {return fName;}
    void SetName(std::string name) {fName = name;}
  private:
    std::string fName;
    TF1* fH1_X;
    TF2* fH2_XY;
  };
  class AEx2: public IAlgorithm {
  public:
    bool Init() ;
    bool Execute() ;
    bool End() ;
    std::string  Name() const {return fName;}
    void SetName(std::string name) {fName = name;}
  private:
    std::string fName;
    std::string fFileName;
    int fNEvents;
    double fBz;
    std::vector<double> fBfield;
    std::vector<int> fBVector;
    TF1* fH1_Y;
    TF2* fH2_YZ;
  };
}
#endif 
